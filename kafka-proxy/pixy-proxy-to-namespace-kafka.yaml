# TODO readiness, resources and logging
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-pixy-proxy
  labels: &labels
    app: pixy
    kafka-target-namespace: kafka
spec:
  replicas: 2
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.11.0@sha256:3b3eb76bc74c8e36e0ed3507844b6c12f69e9efa7588a7e35a29f90ee3e90067
        ports:
        - containerPort: 80
          name: http
        command:
        - /usr/local/bin/envoy
        - -l info
        args:
        - --config-yaml
        - |
          admin:
            access_log_path: /dev/null
            address:
              socket_address: { address: 127.0.0.1, port_value: 8081 }
          static_resources:
            listeners:
            - name: listener_0
              address:
                socket_address: { address: 0.0.0.0, port_value: 80 }
              filter_chains:
              - filters:
                - name: envoy.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                    stat_prefix: http
                    codec_type: AUTO
                    access_log:
                    - name: envoy.file_access_log
                      filter:
                        not_health_check_filter: {}
                      config:
                        path: "/dev/stdout"
                        json_format:
                          start_time: "%START_TIME%"
                          req_method: "%REQ(:METHOD)%"
                          req_path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          resp_code: "%RESPONSE_CODE%"
                          resp_flags: "%RESPONSE_FLAGS%"
                          bytes_recv: "%BYTES_RECEIVED%"
                          bytes_sent: "%BYTES_SENT%"
                          duration: "%DURATION%"
                          agent: "%REQ(USER-AGENT)%"
                          content_type: "%REQ(CONTENT-TYPE)%"
                          content_length: "%REQ(CONTENT-LENGTH)%"
                    route_config:
                      name: local_route
                      virtual_hosts:
                      - name: local_service
                        domains: ["*"]
                        routes:
                        - match: { prefix: "/" }
                          route: { cluster: pixy_in_namespace_kafka }
                    http_filters:
                    - name: envoy.health_check
                      config:
                        pass_through_mode: false
                        headers:
                          name: :path
                          exact_match: /healthz
                    - name: envoy.router
            clusters:
            - name: pixy_in_namespace_kafka
              connect_timeout: 0.25s
              type: LOGICAL_DNS
              dns_lookup_family: V4_ONLY
              lb_policy: ROUND_ROBIN
              load_assignment:
                cluster_name: pixy
                endpoints:
                - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: pixy.kafka
                          port_value: 80
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
