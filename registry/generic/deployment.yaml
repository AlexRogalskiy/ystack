apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  labels: &labels
    app: registry
spec:
  replicas: 1
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: docker-v2
        image: registry:2.7.1@sha256:a54bc9be148764891c44676ce8c44f1e53514c43b1bfbab87b896f4b9f0b5d99
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 500m
            memory: 200Mi
        ports:
        - containerPort: 80
          name: registry
          protocol: TCP
        env:
        - name: REGISTRY_HTTP_SECRET
          value: TODO_GET_FROM_SECRET
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:80
        - name: REGISTRY_LOG_LEVEL
          value: debug
        - name: REGISTRY_STORAGE
          value: s3
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: blobs-minio
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: blobs-minio
        - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
          value: http://blobs-minio:9000
        - name: REGISTRY_STORAGE_S3_REGION
          value: us-east-1
        - name: REGISTRY_STORAGE_S3_BUCKET
          value: ystack-builds-registry
        readinessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
        volumeMounts:
        - name: etc-registry
          mountPath: /etc/docker/registry
        - name: storage-temporary
          mountPath: /var/lib/registry
      volumes:
      - name: etc-registry
        configMap:
          name: registry-config
      - name: storage-temporary
        emptyDir: {}
