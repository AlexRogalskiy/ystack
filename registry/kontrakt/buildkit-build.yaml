# Until init containers can have sidecars
# this test won't pull the resulting image
# because we can't build during init
apiVersion: batch/v1
kind: Job
metadata:
  name: test-buildkit
  labels: &labels
    kontrakt: readiness
spec:
  template:
    metadata:
      labels: *labels
      annotations:
        container.apparmor.security.beta.kubernetes.io/buildkitd: unconfined
        container.seccomp.security.alpha.kubernetes.io/buildkitd: unconfined
    spec:
      containers:
      - name: buildkitd
        image: moby/buildkit:master-rootless@sha256:3c02ab0cd4f54f1ae1f1748514db65090234e1923d9218e28b28412f06d7c65e
        args:
        - --addr
        - unix:///run/user/1000/buildkit/buildkitd.sock
        - --addr
        - tcp://127.0.0.1:1234
        - --oci-worker-no-process-sandbox
      - name: build
        image: moby/buildkit:master-rootless@sha256:3c02ab0cd4f54f1ae1f1748514db65090234e1923d9218e28b28412f06d7c65e
        workingDir: /tmp
        env:
        - name: BUILDKIT_HOST
          value: tcp://127.0.0.1:1234
        - name: IMAGE
          value: &image builds.registry.svc.cluster.local/y-stack/test/registry-kontrakt-buildkit-build:latest
        command:
        - sh
        - -ce
        - |
          echo "Built at $(date)" > ./timestamp;
          echo "FROM busybox@sha256:c94cf1b87ccb80f2e6414ef913c748b105060debda482058d2b8d0fce39f11b9" > Dockerfile;
          echo "COPY timestamp /timestamp" >> Dockerfile;
          echo 'ENTRYPOINT ["cat","/timestamp"]' >> Dockerfile
          buildctl build \
            --frontend dockerfile.v0 \
            --local context="." \
            --local dockerfile="." \
            --opt filename=Dockerfile \
            --output "type=image,name=$IMAGE,push=true,registry.insecure=true"
      - name: build-cache-warm
        image: moby/buildkit:master-rootless@sha256:3c02ab0cd4f54f1ae1f1748514db65090234e1923d9218e28b28412f06d7c65e
        workingDir: /tmp
        env:
        - name: BUILDKIT_HOST
          value: tcp://127.0.0.1:1234
        - name: IMAGE
          value: builds.registry.svc.cluster.local/y-stack/test/registry-kontrakt-buildkit-build:cached1
        command:
        - sh
        - -ce
        - |
          echo "FROM alpine:3.10@sha256:ca1c944a4f8486a153024d9965aafbe24f5723c1d5c02f4964c045a16d19dc54" > Dockerfile;
          echo "RUN apk add --no-cache curl" >> Dockerfile;
          echo 'ENTRYPOINT ["stat","/usr/bin/curl"]' >> Dockerfile
          buildctl build \
            --frontend dockerfile.v0 \
            --local context="." \
            --local dockerfile="." \
            --opt filename=Dockerfile \
            --export-cache type=local,dest=/buildcache \
            --output "type=image,name=$IMAGE,push=true,registry.insecure=true"
          touch /messages/cache-build-completed
        volumeMounts:
        - name: messages
          mountPath: /messages
        - name: buildcache
          mountPath: /buildcache
      - name: build-cache-use
        image: moby/buildkit:master-rootless@sha256:3c02ab0cd4f54f1ae1f1748514db65090234e1923d9218e28b28412f06d7c65e
        workingDir: /tmp
        env:
        - name: BUILDKIT_HOST
          value: tcp://127.0.0.1:1234
        - name: IMAGE
          value: builds.registry.svc.cluster.local/y-stack/test/registry-kontrakt-buildkit-build:cached2
        command:
        - sh
        - -ce
        - |
          until [ -f /messages/cache-build-completed ]; do echo "Waiting for cache build" && sleep 1; done
          echo "FROM alpine:3.10@sha256:ca1c944a4f8486a153024d9965aafbe24f5723c1d5c02f4964c045a16d19dc54" > Dockerfile;
          echo "RUN apk add --no-cache curl" >> Dockerfile;
          echo 'ENTRYPOINT ["stat","/usr/bin/curl"]' >> Dockerfile
          echo "RUN touch not-cached" >> Dockerfile;
          buildctl build \
            --frontend dockerfile.v0 \
            --local context="." \
            --local dockerfile="." \
            --opt filename=Dockerfile \
            --import-cache type=local,src=/buildcache \
            --export-cache type=local,dest=/buildcache \
            --output "type=image,name=$IMAGE,push=true,registry.insecure=true"
        volumeMounts:
        - name: messages
          mountPath: /messages
        - name: buildcache
          mountPath: /buildcache
      volumes:
      - name: messages
        emptyDir: {}
      - name: buildcache
        emptyDir: {}
      restartPolicy: Never
  backoffLimit: 0
