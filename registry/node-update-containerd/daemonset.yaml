apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: containerd-registry-http
spec:
  selector:
    matchLabels:
      app: containerd-registry-http
  template:
    metadata:
      labels:
        app: containerd-registry-http
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
    spec:
      hostPID: true
      hostNetwork: true
      initContainers:
      - name: update
        image: ubuntu:18.04@sha256:b88f8848e9a1a4e4558ba7cfc4acc5879e1d0e7ac06401409062ad2627e6fb58
        volumeMounts:
        - name: etc-containerd
          mountPath: /etc/containerd
          readOnly: false
        - name: results
          mountPath: /results
        env:
        - name: CONFIG_PATH
          value: /etc/containerd/config.toml
        securityContext:
          privileged: true
        command:
        - bash
        #to troubleshoot use: - -cex
        - -ce
        - |
          if ! grep builds-registry.ystack.svc.cluster.local $CONFIG_PATH; then
            echo '[plugins.cri.registry.mirrors."builds-registry.ystack.svc.cluster.local"]' >> $CONFIG_PATH
            echo '  endpoint = ["http://builds-registry.ystack.svc.cluster.local"]'          >> $CONFIG_PATH
            echo '[plugins.cri.registry.mirrors."builds-registry.ystack.svc.cluster.local:80"]' >> $CONFIG_PATH
            echo '  endpoint = ["http://builds-registry.ystack.svc.cluster.local"]'          >> $CONFIG_PATH
            touch /results/config-updated
          fi
          if ! grep prod-registry.ystack.svc.cluster.local $CONFIG_PATH; then
            echo '[plugins.cri.registry.mirrors."prod-registry.ystack.svc.cluster.local"]'   >> $CONFIG_PATH
            echo '  endpoint = ["http://prod-registry.ystack.svc.cluster.local"]'            >> $CONFIG_PATH
            echo '[plugins.cri.registry.mirrors."prod-registry.ystack.svc.cluster.local:80"]'   >> $CONFIG_PATH
            echo '  endpoint = ["http://prod-registry.ystack.svc.cluster.local"]'            >> $CONFIG_PATH
            touch /results/config-updated
          fi
          cat $CONFIG_PATH
           if [ -f /results/config-updated ]; then
            echo "Configuration has been updated; restarting containerd (not expecting any output) ..."
            nsenter --mount=/proc/1/ns/mnt -- systemctl restart containerd
            echo "Restart triggered"
           else
            echo "No configration change"
           fi
          echo "Done"
      containers:
      - name: init-container-did-the-work
        image: gcr.io/google_containers/pause-amd64:3.1@sha256:59eec8837a4d942cc19a52b8c09ea75121acc38114a2c68b98983ce9356b8610
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etc-containerd
        hostPath:
          path: /etc/containerd
      - name: results
        emptyDir: {}
