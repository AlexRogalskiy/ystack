#!/usr/bin/env bash
[ -z "$DEBUG" ] || set -x
set -eo pipefail

[ -z "$KUBECONFIG" ] && echo "Provision requires an explicit KUBECONFIG env" && exit 1

[ -z "$CONTEXTNAME" ] && CONTEXTNAME=local

# Not reusing y-k3s-install, avoid breaking multipass provision
K3S_INSTALLER_REVISION=d93c82f9585ed9e0ff7ebe95b1506f4587fffc1c

mkdir -p /tmp/lima/ystack/rancher/k3s
curl -sfL https://github.com/k3s-io/k3s/raw/$K3S_INSTALLER_REVISION/install.sh > /tmp/lima/ystack/install.sh

limactl start --tty=false $YSTACK_HOME/k3s/ystack.yaml
cp $YSTACK_HOME/k3s/docker-image/registries.yaml /tmp/lima/ystack/rancher/k3s

#limactl shell ystack sudo apk add curl
limactl shell ystack swapoff -a
limactl shell ystack sudo cp -rv /tmp/lima/ystack/rancher /etc
limactl shell ystack sh /tmp/lima/ystack/install.sh
limactl shell ystack sudo sh -c 'until test -f /etc/rancher/k3s/k3s.yaml; do sleep 1; done; cat /etc/rancher/k3s/k3s.yaml' > "$KUBECONFIG.tmp"

# https://github.com/containerd/nerdctl/blob/master/docs/multi-platform.md
# https://github.com/containerd/nerdctl/pull/448
# But we do LIMA_INSTALL_BINFMT_MISC=true in https://github.com/solsson/alpine-lima/blob/ystack-test/edition/ystack
#limactl shell ystack sudo nerdctl run --privileged --rm tonistiigi/binfmt --install all

KUBECONFIG="$KUBECONFIG.tmp" kubectl config rename-context default $CONTEXTNAME

until KUBECONFIG="$KUBECONFIG.tmp" kubectl --context=$CONTEXTNAME  -n kube-system get pods 2>/dev/null; do
  echo "Waiting for the cluster respond ..."
  sleep 1
done

# TODO fix node-exporter pod failing on: Error: failed to generate container "..." spec: path "/" is mounted on "/" but it is not a shared or slave mount
# KUBECONFIG="$KUBECONFIG.tmp" y-cluster-assert-install --context=$CONTEXTNAME

# This list of bases also exists in ../k3s/docker-ystack-proxy/Dockerfile
for base in \
    00-ystack-namespace \
    10-minio \
    20-builds-registry \
    21-prod-registry \
    22-node-update-hosts \
    30-y-assert-support \
    40-buildkit; do \
  basepath="$YSTACK_HOME/k3s/$base/"
  echo "# Applying $basepath ..."
  KUBECONFIG="$KUBECONFIG.tmp" kubectl --context=$CONTEXTNAME apply -k $basepath
done

KUBECONFIG="$KUBECONFIG.tmp" kubectl --context=$CONTEXTNAME -n ystack apply -k $YSTACK_HOME/registry/node-update-hosts/

y-kubeconfig-import "$KUBECONFIG.tmp"
