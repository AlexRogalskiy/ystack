#!/usr/bin/env bash
[ -z "$DEBUG" ] || set -x
set -e

# For example: --opt filename=test.Dockerfile
BUILDCTL_OPTS="$@"

# Needed until Skaffold supports buildctl, or the buildkit that comes with Docker supports BUILDKIT_HOST
# We could also build using Tekton, if Skaffold had a generic way to transfer the build context to a waitinig build step container

# Settings
REGISTRY=builds-registry.ystack.svc.cluster.local
BUILDKIT_CACHE="type=registry,ref=$REGISTRY/ystack:buildcache"
if [ "$(curl -s --connect-timeout 3 http://$REGISTRY/v2/)" != "{}" ]
then
  echo "ERROR Skaffold need local access to the builds registry for digest lookup after build"
  echo "Registry: $REGISTRY"
  echo "Look for y-stack's ingress or port-forward utilities"
  exit 1
fi

[ -z "$BUILDKIT_HOST" ] && BUILDKIT_HOST=tcp://buildkitd.ystack.svc.cluster.local:8547

# Envs from Skaffold build custom
# (but for now we simply ignore PUSH_IMAGE as it has no clear significance for in-cluster builds)
[ -z "$BUILD_CONTEXT" ] && {
  echo "No BUILD_CONTEXT env (from for example Skaffold). Using first arg like traditional Docker build do."
  BUILD_CONTEXT="$1"
  [ -z "$BUILD_CONTEXT" ] && echo "... and no first arg either. Exiting." && exit 1
}
[ -z "$BUILD_CONTEXT_DOCKERFILE" ] && BUILD_CONTEXT_DOCKERFILE="$BUILD_CONTEXT" # Do these ever differ?

[ -z "$IMAGE" ] && {
  name=${PWD##*/}
  IMAGE="$REGISTRY/y-stack-temp-builds/$name"
  echo "No IMAGE env (from for example Skaffold). Guessing: $IMAGE"
}

# Hooks, evaluating reliance on PATH for that
command -v y-hook-build-pre && cd $BUILD_CONTEXT && y-hook-build-pre

IMAGE=$IMAGE
case "$IMAGE" in
  $REGISTRY/* ) ;;
  * ) echo "Only the ystack builds registry is supported at the moment. Got: $IMAGE" && exit 1 ;;
esac

OUTPUT="type=image,name=$IMAGE,push=true,registry.insecure=true"

echo "Build command:"
set -x
KUBECONFIG=$KUBECONFIG \
BUILDKIT_HOST=$BUILDKIT_HOST \
  y-buildctl build \
    --frontend dockerfile.v0 \
    --local context="$BUILD_CONTEXT" \
    --local dockerfile="$BUILD_CONTEXT_DOCKERFILE" \
    --import-cache $BUILDKIT_CACHE \
    --export-cache $BUILDKIT_CACHE \
    $BUILDCTL_OPTS \
    --output "$OUTPUT"
