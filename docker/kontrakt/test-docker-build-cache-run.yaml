apiVersion: batch/v1
kind: Job
metadata:
  name: test-docker-build-cache-run
spec:
  template:
    spec:
      containers:
      - name: docker
        image: solsson/build-contract:tekton0.10@sha256:0702df18355ba64238ab78cb38d171e8462e2e642da41b028e2009efb5a9476e
        env:
        - name: DOCKER_HOST
          value: tcp://dockerd.ystack.svc.cluster.local:2376
        command:
        - /bin/sh
        - -cex
        - |
          mkdir build-contracts && cd build-contracts
          cat << EOF > docker-compose.yml
          version: '2'
          services:
            server:
              labels:
              - com.yolean.build-target
              image: localhost:5000/test/docker-in-docker-in-ystack-build-test
              build:
                context: .
                dockerfile: server.Dockerfile
              expose:
              - "80"
            client:
              labels:
              - com.yolean.build-contract
              build:
                context: .
                dockerfile: client.Dockerfile
              command:
              - curl
              - --retry-connrefused
              - --retry
              -   "5"
              - -s
              - http://server/
          EOF
          cat << EOF > server.Dockerfile
          FROM nginx:1.17.3-alpine
          RUN echo "My server built at $(date)" > /usr/share/nginx/html/index.html
          EOF
          cat << EOF > client.Dockerfile
          FROM alpine
          RUN apk add --no-cache curl
          EOF
          docker-compose build
          # Actually to really test caching we must restart the dockerd pod here, and inspect build output
          (cd .. && build-contract)
      restartPolicy: Never
  backoffLimit: 0
